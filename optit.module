<?php

///**
// * Implements hook_help().
// */
//function optit_help($route_name, RouteMatchInterface $route_match) {
//  switch ($route_name) {
//    case "admin/structure/optit/members":
//      return "<p>" . t("This is an Opt It membership administration page. You can find a member here and unsubscribe them from all keywords.") . "</p>";
//      break;
//    case "admin/structure/optit/keywords":
//      return "<p>" . t("Use keywords to run multiple programs. Setup one or many keywords for subscription groups, contests, voting, auto-responses, message forwarding and segmenting your users. Click on the Actions link for keyword-specific operations.") . "</p>";
//      break;
//    case "admin/structure/optit/keywords/%/subscriptions":
//      return "<p>" . t("In this page, you can administer subscriptions to a keyword. You can opt-in and opt-out phone numbers, send messages to entire group, or message individual subscriber.") . "</p>";
//      break;
//    case "admin/structure/optit/keywords/%/interests":
//      return "<p>" . t("Group your customers into interests. Group them based on demographics, message history, location and more. Use interests to send targeted messages.") . "</p>";
//      break;
//  }
//}

function _optit_us_states() {
  return array(
    'AL' => 'Alabama',
    'AK' => 'Alaska',
    'AZ' => 'Arizona',
    'AR' => 'Arkansas',
    'CA' => 'California',
    'CO' => 'Colorado',
    'CT' => 'Connecticut',
    'DE' => 'Delaware',
    'FL' => 'Florida',
    'GA' => 'Georgia',
    'HI' => 'Hawaii',
    'ID' => 'Idaho',
    'IL' => 'Illinois',
    'IN' => 'Indiana',
    'IA' => 'Iowa',
    'KS' => 'Kansas',
    'KY' => 'Kentucky',
    'LA' => 'Louisiana',
    'ME' => 'Maine',
    'MD' => 'Maryland',
    'MA' => 'Massachusetts',
    'MI' => 'Michigan',
    'MN' => 'Minnesota',
    'MS' => 'Mississippi',
    'MO' => 'Missouri',
    'MT' => 'Montana',
    'NE' => 'Nebraska',
    'NV' => 'Nevada',
    'NH' => 'New Hampshire',
    'NJ' => 'New Jersey',
    'NM' => 'New Mexico',
    'NY' => 'New York',
    'NC' => 'North Carolina',
    'ND' => 'North Dakota',
    'OH' => 'Ohio',
    'OK' => 'Oklahoma',
    'OR' => 'Oregon',
    'PA' => 'Pennsylvania',
    'RI' => 'Rhode Island',
    'SC' => 'South Carolina',
    'SD' => 'South Dakota',
    'TN' => 'Tennessee',
    'TX' => 'Texas',
    'UT' => 'Utah',
    'VT' => 'Vermont',
    'VA' => 'Virginia',
    'WA' => 'Washington',
    'WV' => 'West Virginia',
    'WI' => 'Wisconsin',
    'WY' => 'Wyoming',
    'DC' => 'District of Columbia',
  );
}

function _optit_actions($links) {
  unset($_GET['destination']);
  foreach ($links as $key => $link) {
    $links[$key]['query'] = drupal_get_destination();
  }
  $element = [
    '#type' => 'dropbutton',
    '#links' => $links
  ];

  return render($element);
}


function optit_phone_validate($phone) {
  if ((strlen($phone) == 11) && ctype_digit($phone)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Formats a date, using a date type or a custom date format string.
 *
 * @param $optit_time
 *   A date/time string received from OptIt API server.
 * @param $type
 *   (optional) The format to use, one of:
 *   - 'short', 'medium', or 'long' (the corresponding built-in date formats).
 *   - The name of a date type defined by a module in hook_date_format_types(),
 *     if it's been assigned a format.
 *   - The machine name of an administrator-defined date format.
 *   - 'custom', to use $format.
 *   Defaults to 'medium'.
 * @param $format
 *   (optional) If $type is 'custom', a PHP date format string suitable for
 *   input to date(). Use a backslash to escape ordinary text, so it does not
 *   get interpreted as date format characters.
 * @param $timezone
 *   (optional) Time zone identifier, as described at
 *   http://php.net/manual/timezones.php Defaults to the time zone used to
 *   display the page.
 * @param $langcode
 *   (optional) Language code to translate to. Defaults to the language used to
 *   display the page.
 *
 * @return
 *   A translated date string in the requested format.
 */
function optit_time_convert($optit_time, $type = 'medium', $format = '', $timezone = NULL, $langcode = NULL) {
  // Hardcoded :(
  $timezones = array(
    'EST' => 'Eastern Standard Time',
    'CST' => 'Central Standard Time',
    'MST' => 'Mountain Standard Time',
    'PST' => 'Pacific Standard Time',
    'AKST' => 'Alaska Standard Time',
    'HAST' => 'Hawaii-Aleutian Standard Time',
    'EDT' => 'Eastern Daylight Time',
    'CDT' => 'Central Daylight Time',
    'MDT' => 'Mountain Daylight Time',
    'PDT' => 'Pacific Daylight Time',
    'AKDT' => 'Alaska Daylight Time',
    'HADT' => 'Hawaii-Aleutian Daylight Time',
  );
  // Make sure all American timezone names are shortened, PHP likes it that way.
  $optit_time = str_replace(array_values($timezones), array_keys($timezones), $optit_time);

  $dateobj = DateTime::createFromFormat(\Drupal\optit\Optit\Optit::OPTIT_TIME_FORMAT, $optit_time);
  // Make sure not to throw errors when converting DateTime object to Unix timestamp.
  if (DateTime::getLastErrors()['error_count']) {
    return $optit_time;
  }

  return format_date($dateobj->format('U'), $type, $format, $timezone, $langcode);
}
